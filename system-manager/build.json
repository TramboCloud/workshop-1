{
  "schemaVersion": "1.2",
  "description": "Run a shell script or specify the commands to run.",
  "parameters": {
    "redisHost": {
      "type": "String",
      "description": "The redis host.",
      "default": "localhost"
    },
    "redisPort": {
      "type": "String",
      "description": "The redis port.",
      "default": "6379"
    },
    "appPort": {
      "type": "String",
      "description": "The port to use in the app",
      "default": "3000"
    },
    "workingDirectory": {
      "type": "String",
      "default": "/opt",
      "description": "(Optional) The path to the working directory on your instance.",
      "maxChars": 4096
    },
    "executionTimeout": {
      "type": "String",
      "default": "3600",
      "description": "(Optional) The time in seconds for a command to complete before it is considered to have failed. Default is 3600 (1 hour). Maximum is 172800 (48 hours).",
      "allowedPattern": "([1-9][0-9]{0,4})|(1[0-6][0-9]{4})|(17[0-1][0-9]{3})|(172[0-7][0-9]{2})|(172800)"
    }
  },
  "runtimeConfig": {
    "aws:runShellScript": {
      "properties": [
        {
          "id": "0.aws:runShellScript",
          "runCommand": [
            "apt-get update",
            "apt-get install -y curl apt-utils build-essential wget git gettext software-properties-common libxrender1 tzdata ",
            "apt-get install -y zlib1g-dev libpq-dev libssl-dev libreadline-dev libyaml-dev libsqlite3-dev libxml2-dev libxslt1-dev libcurl4-openssl-dev libffi-dev",
            "curl -sL https://deb.nodesource.com/setup_8.x | bash - ",
            "apt-get install -y nodejs ",
            "export REDIS_HOST={{ redisHost }}",
            "export REDIS_PORT={{ redisPort }}",
            "export APP_PORT={{ appPort }}",
            "git clone https://github.com/TramboCloud/hapi-socketio-redis-chat-example.git",
            "cd hapi-socketio-redis-chat-example",
            "npm install",
            "envsubst < service.file >  /etc/systemd/system/dummy.service",
            "systemctl daemon-reload"
          ],
          "workingDirectory": "{{ workingDirectory }}",
          "timeoutSeconds": "{{ executionTimeout }}"
        }
      ]
    }
  }
}
